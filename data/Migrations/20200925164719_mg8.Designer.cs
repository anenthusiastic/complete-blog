// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data.Concrete.EFCore;

namespace data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200925164719_mg8")]
    partial class mg8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("entity.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("entity.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("entity.Header", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("heading")
                        .HasColumnType("TEXT");

                    b.Property<string>("imageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("subHeading")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("entity.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("message")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("entity.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("content")
                        .HasColumnType("TEXT");

                    b.Property<string>("date")
                        .HasColumnType("TEXT");

                    b.Property<int>("headerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("viewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("headerId")
                        .IsUnique();

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("entity.PostCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("postId")
                        .HasColumnType("INTEGER");

                    b.HasKey("categoryId", "postId");

                    b.HasIndex("postId");

                    b.ToTable("PostCategory");
                });

            modelBuilder.Entity("entity.Comment", b =>
                {
                    b.HasOne("entity.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("entity.Post", b =>
                {
                    b.HasOne("entity.Header", "header")
                        .WithOne("post")
                        .HasForeignKey("entity.Post", "headerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("entity.PostCategory", b =>
                {
                    b.HasOne("entity.Category", "category")
                        .WithMany("postcategory")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("entity.Post", "post")
                        .WithMany("postcategory")
                        .HasForeignKey("postId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
